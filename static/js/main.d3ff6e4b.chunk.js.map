{"version":3,"sources":["Home/UsernameInput.tsx","Home/Home.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["UsernameInput","useState","username","setUsername","apiResponse","setApiResponse","currentMembers","setCurrentMembers","pendingMembers","setPendingMembers","apiEndpoint","sendInvitation","a","fetch","method","body","JSON","stringify","Login","then","res","status","statusText","catch","error","console","makeListItem","member","getMembers","extractUsername","user","login","json","active","map","pending","useEffect","className","type","value","onChange","e","target","onClick","href","Home","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAmFeA,MAjFf,WACI,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA4CN,mBAAS,IAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAEMC,EAAc,6CACdC,EAAc,uCAAG,sBAAAC,EAAA,sDAGnBC,MAAMH,EAAc,eAAgB,CAChCI,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,MAAOhB,MAC/BiB,MACC,SAACC,GAAD,OAASf,EACL,OAASH,EAAW,+BAAiCkB,EAAIC,OAAS,IAAMD,EAAIE,eAClFC,OACE,SAACC,GAAD,OAAWC,QAAQD,MAAMA,MAVV,2CAAH,qDAcdE,EAAe,SAACC,GAClB,OAAO,6BAAkBA,GAATA,IAGdC,EAAU,uCAAG,4BAAAhB,EAAA,sDACTiB,EAAkB,SAACC,GAAD,OAAeA,EAAKC,OAC5ClB,MAAMH,EAAc,SAASS,MAAK,SAACC,GAC/B,OAAOA,EAAIY,UACZb,MAAK,SAACa,GACLzB,EAAkByB,EAAKC,OAAOC,IAAIL,IAClCpB,EAAkBuB,EAAKG,QAAQD,IAAIL,OACpCN,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,MAPnB,2CAAH,qDAgBhB,OALAY,qBAAU,WAENR,MACD,CAACxB,IAGA,sBAAKiC,UAAU,wBAAf,UACI,oBAAIA,UAAU,MAAd,wCAIA,uBACIC,KAAK,OACLC,MAAOrC,EACPsC,SAAU,SAACC,GAAD,OAAOtC,EAAYsC,EAAEC,OAAOH,QACtCF,UAAU,8CAEd,wBACIM,QAAS,SAACF,GAAD,OAAO9B,KAChB0B,UAAU,0BAFd,6BAOA,oBAAIA,UAAU,OAAd,SAAsBjC,IACtB,qBAAKiC,UAAW,MAAhB,gHACA,sBAAKA,UAAW,MAAhB,wBAAiC,mBAAGO,KAAK,uDAAR,kBAAjC,qCACA,sBAAKP,UAAU,UAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,iDACA,oBAAIA,UAAU,gBAAd,SACK/B,EAAe4B,IAAIR,QAG5B,sBAAKW,UAAU,kBAAf,UACI,qDACA,oBAAIA,UAAU,gBAAd,SACK7B,EAAe0B,IAAIR,eCxD7BmB,MAhBf,WACE,OACE,sBAAKR,UAAU,gBAAf,UACE,wBAAQA,UAAU,4BAAlB,SACE,oBAAIA,UAAU,cAAd,oFAKF,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,UCLKS,MAJf,WACE,OAAQ,cAAC,EAAD,KCSKC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d3ff6e4b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction UsernameInput() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [apiResponse, setApiResponse] = useState(\"\");\r\n    const [currentMembers, setCurrentMembers] = useState([]);\r\n    const [pendingMembers, setPendingMembers] = useState([]);\r\n\r\n    const apiEndpoint = \"https://company-website-api.herokuapp.com/\";\r\n    const sendInvitation = async () => {\r\n        // Call our api to send invitation to user.\r\n        // Set api response\r\n        fetch(apiEndpoint + \"users/invite\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ Login: username })\r\n        }).then(\r\n            (res) => setApiResponse(\r\n                \"Hey \" + username + \" here is your api response: \" + res.status + \" \" + res.statusText)\r\n        ).catch(\r\n            (error) => console.error(error)\r\n        );\r\n    }\r\n\r\n    const makeListItem = (member: string) => {\r\n        return <li key={member}>{member}</li>;\r\n    }\r\n\r\n    const getMembers = async () => {\r\n        const extractUsername = (user: any) => user.login;\r\n        fetch(apiEndpoint + \"users\").then((res) => {\r\n            return res.json();\r\n        }).then((json) => {\r\n            setCurrentMembers(json.active.map(extractUsername));\r\n            setPendingMembers(json.pending.map(extractUsername));\r\n        }).catch((error) => console.error(error));\r\n    }\r\n\r\n    // OnMount\r\n    useEffect(() => {\r\n        // Call api to get current members and pending members and set state\r\n        getMembers();\r\n    }, [apiResponse]);\r\n\r\n    return (\r\n        <div className=\"container text-center\">\r\n            <h2 className=\"m-2\">\r\n                Enter your github username\r\n            </h2>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                className=\"form-control m-2 w-50 text-center mx-auto\"\r\n            />\r\n            <button\r\n                onClick={(e) => sendInvitation()}\r\n                className=\"btn btn-outline-success\"\r\n            >\r\n                Send Invitation\r\n            </button>\r\n\r\n            <h3 className=\"mt-5\">{apiResponse}</h3>\r\n            <div className= \"m-2\">Please check for your name in the pending Invitations section after you have sent your invitation.</div>\r\n            <div className= \"m-2\">Click this <a href=\"https://github.com/programmers-from-the-same-company\">link</a> or check your email to accept.</div>\r\n            <div className=\"row m-5\">\r\n                <div className=\"col text-center\">\r\n                    <h2>Current Members</h2>\r\n                    <ul className=\"list-unstyled\">\r\n                        {currentMembers.map(makeListItem)}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <h2>Pending Invitations</h2>\r\n                    <ul className=\"list-unstyled\">\r\n                        {pendingMembers.map(makeListItem)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsernameInput;\r\n","import React from 'react';\r\nimport UsernameInput from './UsernameInput';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"container col\">\r\n      <header className=\"row align-self-center m-5\">\r\n        <h1 className=\"text-center\">\r\n          A group where we all pretend to be programmers\r\n           from the same company\r\n        </h1>\r\n      </header>\r\n      <div className=\"row align-self-center\">\r\n          <UsernameInput/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Home from '../Home/Home';\r\nimport \"../index.css\";\r\n\r\nfunction App() {\r\n  return (<Home/>);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}